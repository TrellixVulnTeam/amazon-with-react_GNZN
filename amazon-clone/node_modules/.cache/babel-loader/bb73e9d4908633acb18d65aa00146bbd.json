{"ast":null,"code":"export const initialState = {\n  basket: []\n}; //selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((initialTotal, currentItem) => initialTotal + currentItem.price, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id} as its not in basket!)`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/codester/github-projects/amazon-with-react/amazon-clone/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","initialTotal","currentItem","price","reducer","state","action","console","log","type","item","index","findIndex","basketItem","id","newBasket","splice","warn","user"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB,C,CAGP;;AACA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEE,MAAR,CACE,CAACC,YAAD,EAAeC,WAAf,KAA+BD,YAAY,GAAGC,WAAW,CAACC,KAD5D,EAEE,CAFF,CADK;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACI,IAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE,YAAMC,KAAK,GAAGN,KAAK,CAACP,MAAN,CAAac,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGV,KAAK,CAACP,MAAV,CAAhB;;AAEA,UAAIa,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACU,IAAR,CACG,4BAA2BX,MAAM,CAACQ,EAAG,yBADxC;AAGD;;AACD,aAAO,EACL,GAAGT,KADE;AAELP,QAAAA,MAAM,EAAEiB;AAFH,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGV,KADE;AAELa,QAAAA,IAAI,EAAEZ,MAAM,CAACY;AAFR,OAAP;;AAKF;AACE,aAAOb,KAAP;AA9BJ;AAgCD,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n};\n//selector\nexport const getBasketTotal = (basket) =>\n  basket?.reduce(\n    (initialTotal, currentItem) => initialTotal + currentItem.price,\n    0\n  );\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id} as its not in basket!)`\n        );\n      }\n      return {\n        ...state,\n        basket: newBasket,\n      };\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}